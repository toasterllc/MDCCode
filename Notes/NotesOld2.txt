√ Additional parts to order
    Solder paste
        SMD4300SNL10
    Jumpers
        SNT-100-BK-G


√ Rev4 Layout Todo
    √ Assign missing part numbers
    √ Smash every component to bring back their labels (we may have deleted some)
    √ Test Verilog mockup of SD card I/O to make sure new layout works with SD card
        - Tested by adding SB_IO instances to ICEStreamApp-Rotated
    √ Fill gaps in power layer
    √ Make sure we're following the layout guidelines for crystals
    √ Make sure we don't have any 6-mil traces
    √ Remove unnecessary test points
    √ Make sure 2x 1V2 bypass capacitors at the bottom-left of the ice40 are positioned well
    √ Make sure there are no parts inside the lens holder
    √ Make sure wires beneath motion sensor aren't at risk of being shorted to circuitry on the bottom of the motion sensor
    √ Add ground header?
    √ Make sure lens holder and motion sensor have the same Y position
    √ Length-match USB+/USB- lines
    √ Length-match STM<->ICE SPI lines
    √ Length-match IMG lines
    √ Length-match SD lines
    √ Length-match RAM lines
    √ Rotate image sensor
    √ Move MSP_TEST and MSP_RST_ nets to bottom-left of STM32




√ Rev4 Schematic Todo
    
    √ Replace VDD_A/VDD_B jumpers with something that allows easy current sensing
    
    √ Add connector for battery pack
        Used a jumper
    
    √ Limit USB inrush current
        - Also make sure no one's using VDD_USB directly -- only use the inrush-limited net
        - Options:
            LM3525MX-H/NOPB
                $0.849 @ 100
            
            TPS2001DDBVT
            
            MIC94090YC6-TR
                Soft-start isn't configurable
                $0.25 @ 100
            
            TPS22919DCK
                Already using in our design
                $0.177 @ 100
    
    √ Update BusinessOrders.txt
    
    √ Compact wires going to RAM now that we no longer have an A12 net (ball G1)
    
    √ ICE40: Fix pin layout so that both PLLs can be used
        √ Fix B6 PLL: swap A6 and B6 (RAM_DQM0 is output-only)
        √ Fix L5 PLL
        - When a PLL is used, the tile that it's on can only be used as an output pin (not an input pin). So make PLL IO tiles either outputs, or unused
        - "PLL input path is shared with the IO input path of the IO tile it's in":
            https://freenode.irclog.whitequark.org/yosys/2019-03-13
            https://logs.timvideos.us/%23yosys/%23yosys.2019-03-13.log.html
    
    √ Raise 1.8V rail to 1.85-1.90V so that it's easier to meet the SD card Vih in 3.3V mode
        - Vih(2.8V) = 0.625*VDD = .625*2.8 = 1.75 V => 50mV away from 1.8V rail, 150mV away from 1.9V rail
        - MSP430        👍  VCC: 1.8 - 3.6
        - ICE40         👍  VCCIO I/O Driver Supply Voltage: 1.71 - 3.46
        - RAM           👍  Supply Voltage: 1.7 - 1.95 V
        - AR0330        👍  Digital voltage: 1.7 – 1.9 V
        - SD            👍  Input High Voltage VIH: 1.27 - 2.00 V
        - STM32         👍  VDD: 1.7 - 3.6
        - Motion Sensor 👍🏻  VDD: 2.3 - 4 (1.9V will underpower the motion sensor, but that's OK because
                            it'll only get powered by 1.9V in USB mode -- not battery mode -- and we don't
                            need the motion sensor to work in USB mode anyway. In battery mode, it'll be
                            powered by the 3V battery voltage.)
    
    √ STM32: Make sure we're not using any GPIOs that are powered by VDDUSB, since they'll use VDDUSB, and not 1.8V
        "VDDUSB: ... supply voltage for PA11,PA12, PB14 and PB15 pins"
    
    √ Add bypass capacitor to motion sensor
    
    √ Add bypass capacitors to MSP430
        - Reference current sensor design
        - Reference datasheet / MSP guide
    
    √ Add MSP430 (MSP430FR2422)
        √ Needs FRAM to store the bitmap of the SD card usage
        √ Needs connection to ICE40, to issue commands
            √ 2-wire SPI (clk, data): connect MSP430 MOSI/MISO together, and ensure:
                - During Tx: MOSI=Driven
                - During Rx: MOSI=HighZ
                - 2021-4-28: confirmed that this technique should work by using the CurrentSensor Rev1 board
        √ Needs connection to STM32, so the STM32 can request bitmap of SD card usage
            - Options:
                √ STM32 uses MSP430 debug interface to read bitmap directly from memory
                    - Same interface used for programming MSP430
                - 3 wire SPI (chip select, clk, data)
                    - STM32 can be configured as bidirectional (SPI_CR1_BIDIMODE) so use the same line for both TX and RX
                    - Pros:
                    - Cons:
                        - Requires extra wires
        √ Needs connection to power transistors to control ICE40/RAM/SD power rails
        √ Needs to be programmable/debuggable from STM32
            - Spy-bi-wire likely needs to be implemented by bit-banging 2 GPIOs (instead of using a
              STM32 SPI peripheral), since, with SBW, every third clock reverses the data transfer
              direction for a single clock (so that the slave can output TDO).
        √ Needs connection to motion detector
    
    √ Add motion detector
    
    √ Rename nets containing '24MHz' since we replaced the clock chip to be 16MHz
    
    √ STM32: Fix USB power supply
        - VDD_USB (ball H13) should be supplied with 3-3.6V, but for some reason we tied it to 1V8 on the Rev3 board
        √ Make sure to add necessary capacitors too
    
    √ Figure out ICE40 NVCM programming
        - We should be able to program NVCM from STM32, because:
            - NVCM is programmed using the same SPI interface used for configuring its RAM
            - We're already supplying 2.8V to ICE40's VPP_2V5, which is between the 2.3-3 V range for NVCM programming
    
    √ Add crystal so MSP430 can keep track of time
    
    √ Consider leaving MSP430 ACLK pin disconnected, so we can measure crystal frequency on it
    
    √ Make sure 3V3 LDO starts up after VDD_1V8_STM
    
    √ Add caps to 3V3 LDO output
    
    √ Switch RAM to ALLIANCE-AS4C8M16MSA-6BIN
    
    √ Replace ESD chip with DT1446-04V-7
    
    √ Replace load switches with TPS22919DCK
    
    √ Switch clocks to SIT8021AI-J4-18S-16.000000E
        - Reason: the 24 MHz version is more expensive, and Mouser doesn't have enough quantity
    
    √ Update image sensor part number
    
    √ Figure out power rails, yet again
    
    √ Update PFET footprint / part number
    
    √ Connect ICE_MSP_* nets to ICE40
    
    √ Simulate power supply changes to make sure it still works
        - Needed additional changes (switched back to using a diode for supplying VDDB in USB mode), but it simulates OK now
    
    √ Add power domain control
        - Controlled by MSP430
    
    √ Remove analog switches between SD card and ICE40
        - They present too much capacitance
        - (Also, U11 SD_DATx pins are out of order on Rev3)
    
    √ Block clock to PIX while PIX is powered down
        - Only needed if we're going to separate the PIX power domain
            - If not, PIX will always be powered if the clock is powered, so we don't need to block the clock
        X Have separate clocks for ICE and PIX, each powered by the respective power domain?
            X No, extra the clock chip is expensive, while buffers are cheap
    
    √ Implement PIX / SD power domains:
        √ Option1: separate power domains
            √ Description
                - PIX power and SD power are independently controlled by MSP
            
            √ Requirements
                √ Gate PIX power (PFET)
                √ Gate PIX clock
                    - Option1: separate clock chip with enable tied to PIX power
                    - Option2: tri-state buffer blocks clock signal while PIX isn't powered
                √ Gate SD power (PFET)
        
        X Option2: same power domain
            - Description
                - PIX power and SD power are the same -- they're both powered or unpowered
            
            - Requirements
                - Gate PIX clock
                    - Option1: separate clock chip with enable tied to PIX power
                    - Option2: tri-state buffer blocks clock signal while PIX isn't powered
    
    √ Add reverse polarity protection for the VDD_BAT
    
    √ Block power to STM32 when 1V8 is powered in battery mode
    
    X Consider lowering 2V8 rail to 2V7-ish, so that it's easier to meet the SD card Vih in 3.3V mode
        - Vih(2.8V) = 0.625*VDD = .625*2.8 = 1.75 V => only 50mV away from 1.8V rail
        - Vih(2.7V) = 0.625*VDD = .625*2.7 = 1.6875 V => 0.1125 => 113mV away from 1.8V rail
        X The min voltage for the image sensor is 2.76V :(
    
    X Block current into STM32's MSP_RST_ GPIO, due to the MSP_RST_ pull-up?
        - Not sure if this is necessary since the current will be small. But we should quantify how small the current is:
            - Use CurrentRanger to find out how much current enters an unpowered STM32's GPIO,
              from a 47k resistor hooked to ~3.3V. Test on Rev3 board by removing an LED. (Or
              test first without removing an LED, in case the current is small enough in that
              case, and so we don't need to remove it.)
            
            - Did testing -- STM32 GPIO consumes 83 nA when the STM32 is unpowered
        
        X Don't attempt to block the current. Most analog switches consume at least 100 nA just existing,
          so that defeats the purpose since the current we're trying to block is 83 nA.
          The only analog switch that would help is TMUX1101 (which consumes 3 nA),
          but it's expensive ($0.704 - $1.187).



- Preorder parts to de-risk
    
    - EKMB1107112 (motion sensor -- need to test first before mass order)
        - Mouser in stock
    
    √ DigiKey
        √ STM32F730I8K6 / STM32F723IEK6 / STM32F733IEK6
            - Ordered 15x more (to get to 105x)
            - STM32F723IEK6 / STM32F733IEK6 are more-expensive but pin-compatible with STM32F730I8K6
    
    √ Mouser
        MIC5504-3.3YM5-TR (3.3V LDO)
        MC-306 32.7680K-E3:ROHS (32 kHz crystal)
        MAX40203ANS+T (ideal diode)
        TPS62802YKAR (1.8V supply)
        TPS63805YFFR (2.8V supply)
            - sierraic.com has stock too
        BKP1005EM100-T (ferrite bead)
    
    √ TI
        SN74LVC1G126DCKR (clock-blocking buffer)
        TPS22919DCK / TPS22919QDCKRQ1 (load switch)
    
    √ Rochester
        AR0330CS1C12SPKA0-CR
    
    √ TI
        TPS62801YKAT (1.2V supply)
        SN74AXC4T774RSVR (level shifter)
    
    √ Mouser
        AS4C8M16MSA-6BIN (RAM)
        MSP430FR2422
        PMPB10UPX (PFET)
        DT1446-04V-7 (ESD chip)
        EKMB1107112 (motion sensor) -- only buy a few
        SIT8021AI-J4-18S-16.000000E
    
    √ DigiKey
        ICE40 (100x)
    
    √ Farnell UK
        STM32F730I8K6 (90x)

