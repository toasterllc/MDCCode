- Rev5 Todo
    
    - Switch USB receptacle to USB-C
    
    - Make board left/right borders smaller
    
    - MSP430: If we need more FRAM/SRAM, replace MSP430FR2422 (8KB FRAM, 2KB SRAM) -> MSP430FR2433 (16KB FRAM, 4KB SRAM)
    
    - Layout: when complete, make sure board origin is at 0,0
    
    âˆš Fix motion sensor layout (we swapped the VDD and GND pins)
    
    âˆš Consolidate parts
        âˆš 249k resistor? (replace with 422k, since it just needs to be >= 249k)
        âˆš 4.7uF capacitor (2-3x 2.2uF)
        X 3k resistor (?)
            X We're not using 1k resistors
        X 91k resistor
            X We can't afford to let the 2V8 rail stray from its current value
        X 422k resistor
            X We can't afford to let the 2V8 rail stray from its current value
    
    âˆš Replace 0-ohm resistors with solder jumpers
    
    âˆš Switch 1V9 back to 1V8, now that we've solved the SD card Vih by using LVS
    
    âˆš Switch crystal to use Q13FC13500005 (ordered 110x from LCSC)
        âˆš Also update 2x crystal capacitors -- see CrystalLoadCapacitanceCalculations.txt
        - See CrystalPartOptions.txt for other parts
    
    âˆš Fix power system to ensure that reverse current into battery/USB isn't possible
        - Things to test:
            - Ramp up USB (BAT) while BAT (USB) is already supplying power
                - Reverse current?
            - Plug in USB (BAT) while BAT (USB) is already supplying power, where USB (BAT) < BAT (USB)
                - Reverse current?
            - Plug in USB (BAT) while BAT (USB) is already supplying power, where USB (BAT) > BAT (USB)
                - Reverse current?
            - Disconnect USB (BAT) while USB (BAT) is supplying power
                - In other words, disconnect the power source that is supply power
                - Reverse current?
            - Disconnect USB (BAT) while BAT (USB) is supplying power
                - In other words, disconnect the power source that isn't supply power
                - Reverse current?
    
    âˆš Use Nexperia 74LVC1G98GW,125 logic gate for:
        âˆš IMG clock-blocking buffer (replace TI part)
        âˆš VDD_B_EN OR gate (inputs: VDD_B_EN from MSP, VDD_USB)
    
    âˆš MSP430: fix power supply, again
        âˆš Switched to a slow-on/fast-off break-before-make power rail solution
    
    âˆš MSP430: fix power supply when plugged into USB
        - Problem: MSP430 needs a voltage higher than 2V to reliably start up, due to SVS
        âˆš Solution: Replace MAX40203 with TPS706 LDO
            - LDO requirements
                - LDO input = VDD_B
                - LDO output = 2.5V - 3.3V (use >2.4V so the motion sensor is powered)
                - Needs enable, controlled by VDD_USB
                - Needs to allow output voltage to be high while LDO is off (in battery mode)
                - Needs reverse current protection (in case battery voltage is higher)
                - Can't have an output discharge circuit (otherwise it'll draw current when disabled, in battery mode)
            
            - Still need to use level shifter for MSP's TEST/RST_ nets, since MSP's Vih is
              still too high (.75*2.5=1.875, which is too high to be driven by STM running at 1.8V)
            
            - LDO options:
                TPS706
                    Input voltage: 2.7-6.5 V
                    Output voltage: 1.2-5 V
                    Enable voltage: 0-6.5 V
                    Reverse current (current flowing into OUT pin @ VOUT=3V, VIN=VEN=0V): 100nA
        
        - Solution: Make VDD_A=VDD_2V8, via MAX40203
            X This won't work in battery mode because the MAX40203's voltage input needs to be lower than the battery voltage, otherwise we'll charge the battery
            - But how do we handle STM comms since STM runs at 1.8V?
                - We can't connect directly to STM because MSP430 Vih=2.1 (>1.9V of STM) ðŸ‘Ž
                - Use level shifter. We'll need to free up a spot though
            - Confirm with simulation that the power topology still works (no reverse voltage into battery, etc)
        
        - Solution: Make power supply start at >2.1V, then settle at 1.9V
            - How do we do that?
                - Might not be possible with TPS62802 since its output levels are digitally selected, not analog
                    - We would need a variable resistence on TPS62802 MODE pin
                        - Complicated
                - Some kind of crazy charge pump circuit that's only active at power on?
    
    âˆš MSP430: fix level shifting
        - Since MSP430 is now running at 2.5V, we need to level-shift ICE_MSP_SPI_CLK/ICE_MSP_SPI_DATA and MSP_TEST/MSP_RST_
        
        - Bench-testing supply current of NTB0102
            - Supply current <5nA when A1=A2=VDDA=2.5V and B1=B2=VDDB=0V
                - Same ballpark as reported in "Typical supply current" section of the datasheet 
        
        âˆš Solution: 2x Nexperia NXB0102/NTB0102 level shifters
            - TI TXB0102 / TXB0302 would also work
                - They don't publish 'supply current' though; power consumption might be higher
            
            - Need to adjust MSP_RST_ pin:
                - Remove pullup (rely on internal ~31k pullup)
                    - Reason: Internal pullup is already on the low side, and the external one will act in parallel, reducing overall resistance further
                    - Reason: "Any pull-up or pull-down resistors used must be kept higher than 50 kÎ©"
                - Reduce capacitor to <70pF (reuse cap used elsewhere in design whatever other capacitor)
                    - Reason: "NXB0102 [can] drive capacitive loads of up to 70 pF"
            
            - MSP_RST_ Calculations
                - Because MSP430 has internal pullup (measured: 31k, datasheet: 20k-50k) that's on the low side,
                  the level shifter's VOL and MSP's VIL need to be compared.
                    - Worst case:
                        - NXB0102 output driver = 6k
                            - 6k=4k*1.5 -- assumed worst-case value; TI level shifters assume 4.5k as worst-case, so 6k is conservative
                        - MSP430 RST pullup = 20k (from datasheet)
                        - NXB0102 VOL = (6k/(20k+6k)) * 2.5V == 0.577
                        - MSP430 VIL = 0.625 (.25*2.5, from datasheet)
                        âˆš VOL=0.577 < VIL=0.625
                            - Therefore in the worst-case, NXB0102's VOL will still trigger a low value for MSP
            
            - Price
                $0.202 / channel [NTB0102]
            - Pros
                - Simple
                - Small package (2.1*2 == 4.2 mm^2)
                - 1 STM pin for MSP_RST
                - 1 ICE pin for DOUT/DIN
            - Cons
                - Low current: 10nA @ 25C
        
        - Solution: NFET/PFETs (see schematics in notebook)
            - Parts
                - PMCXB900UE / PMCXB900UEL / PMCXB1000UE
                    - Physically small (1.1 mm^2 * 4 == 4.4 mm^2 total area)
                - NTZD3155C
                    - Physically large (2.56 mm^2)
            - Price
                $0.202 / channel [PMCXB900UE]
            - Pros
                - Low leakage
                    - Most datasheets are very conservative
                    - See https://electronics.stackexchange.com/questions/98597/low-drain-source-mosfet-leakage
                    - NTND31015NZTAG -- IDSS=100pA @ 25C
                    - XLLGA6 -- IDSS=100pA @ 25C
            - Cons
                - 2 STM pins for MSP_RST_
                - 2 ICE pins for DOUT/DIN
                - Complicated: need 4x + 3-10 resistors (number of resistors depends on how fast we want rising edge to be for the various nets)
        
        - Solution: 2x Nexperia 74AVC2T245
            - Price
                $0.208 / channel
            - Pros
                - Simple
                - Smallish (2.52 mm^2 *2 == 5.04 mm^2 total area)
            - Cons
                - 2 STM pins for MSP_RST_
                - 2 ICE pins for DOUT/DIN
                - Medium current: .1 uA according to "Typical total supply current"
        
        - Solution: 4x SN74LVC1T45YZPR
            - Price
                $0.253 / channel
            - Pros
            - Cons
                - 2 STM pins for MSP_RST_
                - 2 ICE pins for DOUT/DIN
                - Medium-ish leakage current (1uA @ 25C)
        
        - Solution: 2x TI SN74AVC2T245
            - Price
                $??? / channel
            - Pros
                - Simple
            - Cons
                - 2 STM pins for MSP_RST_
                - 2 ICE pins for DOUT/DIN
                - Medium-ish leakage current (.5uA @ 25C)
                - No stock
        
        X Solution: 2x 74AVC2T45GN / 74AVC2T45GS
            X Only 1 direction pin
            - Price
                $0.14-0.16 / channel
            - Pros
                - Simple
                - Small (1.2 mm^2 *2 == 2.4x mm^2 total area)
            - Cons
                - 2 STM pins for MSP_RST_
                - 2 ICE pins for DOUT/DIN
                - Medium-ish leakage current (.5 uA @ 25C)
        
        X Solution: 74AUP1T34
            X No direction pin
            - Pros
                - Low leakage (.2uA)
            - Cons
                - Max voltage is 3.6V
        
        X Solution: use 2x SN74LVC2T45
            X Only has 1 direction pin
            - Medium-ish leakage current (1uA @ 25C)
            - One for ICE_MSP_SPI_CLK / ICE_MSP_SPI_DATA (direction controlled by MSP430)
            - One for MSP_TEST / MSP_RST_ (direction controlled by STM32)
    
    âˆš Fix MSP level shifter net names:
        - ICE_MSP_SPI_CLK is actually ICE_MSP_SPI_DATA
        - ICE_MSP_SPI_DATA is actually ICE_MSP_SPI_CLK
    
    âˆš Find solution for ICE40's VOH(min)=[1.5,1.7] < SD's VIH(min)=1.75
        âˆš Solution: only use LVS ('A2') SD cards, and implement LVS identification protocol
            âˆš Need to figure out how LVS identification works
                - Working
                    - See SDLVSTest-Scheme5
            - Pros:
                - Simple
                - Keep existing SD infrastructure
            - Cons:
                - LVS SD cards ('A2') aren't as readily available
                - LVS SD cards are more expensive
            
            - LVS cards:
                https://www.neweggbusiness.com/product/product.aspx?item=9b-20-215-138&tpk=9b-20-215-138
                https://www.neweggbusiness.com/product/product.aspx?item=9b-20-175-006&tpk=9b-20-175-006
        
        - Solution: switch to eMMC
            - For example: https://lcsc.com/product-detail/FLASH_TOSHIBA-THGBMJG6C1LBAIL_C524518.html
            - Pros:
                - No voltage switching required
            - Cons:
                - Aren't easily sourced
                - More expensive
        
        - Solution: implement voltage switching
            - We could use 2 PFETs to switch between voltages, but we'd want break-before-make
              logic, so we'd need to engineer a solution that prevents the voltage from dipping
              below 1.8V when switching the supplies.
            
            - Pros:
                - Proper solution per the SD spec
            - Cons:
                - Complicated
                    - Would require 1 or 2 more IOs to control the PFETs (either from ICE40 or MSP430)
                - Not sure if ICE40 allows VCCIO to change dynamically
        
        - Solution: do nothing and test whether ICE40's VOH is actually a problem in practice
